[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'w0ng/vim-hybrid'
hook_add = '''
set background=dark
" colorscheme 設定は source 後に行う必要があるので VimEnter で行う。
" 但し Colorscheme イベントの発生が抑制されないよう nented を付ける。
au MyAutoCmd VimEnter * nested colorscheme hybrid
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
set laststatus=2
if !has('gui_running')
  set t_Co=256
endif
'''

[[plugins]] # 非同期処理
repo = 'Shougo/vimproc.vim'
hook_add = '''
if !dein#util#_is_windows()
  let g:vimproc#dll_path = g:dein_dir . '/repos/github.com/Shougo/vimproc.vim/lib/vimproc_linux64.so'
endif
'''
hook_post_update = '''
if dein#util#_is_windows()
  let cmd = 'tools\\update-dll-mingw'
elseif dein#util#_is_cygwin()
  let cmd = 'make -f make_cygwin.mak'
elseif executable('gmake')
  let cmd = 'gmake'
else
  let cmd = 'make'
endif
let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'w0rp/ale'

[[plugins]]
repo = 'rhysd/vim-operator-surround'
hook_add = '''
" operator mappings
map <silent>ys <Plug>(operator-surround-append)
map <silent>ds <Plug>(operator-surround-delete)
map <silent>cs <Plug>(operator-surround-replace)
'''
depends = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_source = '''
let g:python3_host_prog = expand('/bin/python3')
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'mhinz/vim-startify'
hook_add = '''
let g:startify_custom_header =
  \ ['','']+map(split(system('env LC_ALL="en_US.utf8" date +"%Y/%m/%d %a" | figlet'), '\n'), '"   ". v:val')
'''

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'

[[plugins]]
repo = 'mattn/webapi-vim'

[[plugins]]
repo = 'mattn/vim-soundcloud'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['roxma/nvim-yarp']
hook_add = '''
let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

[[plugins]]
repo = 'dag/vim-fish'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'kannokanno/previm'
hook_add = '''
let g:previm_open_cmd = 'xdg-open'
'''
